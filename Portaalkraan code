/*
 */

#include <avr/io.h>
#include <util/delay.h>
#include <avr/interrupt.h>

// Eindstopjes
#define EIND_X      PF1         // voor
#define EIND_2X     PF2         // achter
#define EIND_Z      PF3         // links
#define EIND_2Z     PF4         // rechts
#define EIND_2Y     PF5         // boven
#define EIND_Y      PF6         // onder


// IR sensoren
#define IRSENSOR1   PF0
#define IRSENSOR2   PK0
#define IRSENSOR3   PK2
#define IRSENSOR4   PK3
#define IRSENSOR5   PK4
#define IRSENSOR6   PK5
#define IRSENSOR7   PK6
#define IRSENSOR8   PK7

// Knoppen
#define STARTKNOP   PF7

// Noodstop
#define NOODSTOP    PK1

// Elektromagneet
#define ELEKTROMAGNEET  PE4

void initTimer0 (void)
{
    // Timer 0 is de systeemtimer (overflow)
    TCCR0A = 0;
    // 16000000 Hz / 64 / 256 = 976.56 Hz
    // start timer 0, prescaler = 64
    // 1 tick = 64 / 16000000 sec
    TCCR0B = TCCR0B | (1 << CS01) | (1 << CS00);
    // enable timer 0 voor overflow interrupt flag
    TIMSK0 = TIMSK0 | (1 << TOIE0);
}

void initTimer1(void)
{
    // Timer 1 (16 bit) is de systeemtimer (overflow)
    TCCR1A = 0;
    // 16000000 Hz / 1 / 65536 = 244.14 Hz
    // start timer 1, prescaler = 1
    // 1 tick = 1 / 16000000 sec
    TCCR1B = TCCR1B | (1 << CS10) | (1 << CS11);
    // enable timer 1 voor overflow interrupt flag
    TIMSK1 = TIMSK1 | (1 << TOIE1);
}

// Interrupt voor end switches
ISR(TIMER0_OVF_vect)
{

    //Eindstoppen
    int stop_z = !(PINF &(1 << EIND_Z));
    int stop_2z = !(PINF &(1 << EIND_2Z));
    int stop_x = !(PINF &(1 << EIND_X));
    int stop_2x = !(PINF &(1 << EIND_2X));

    // Als het wiel de endswitch indrukt dan draait de motor de andere kant op
    if(stop_2x)
    {
        PORTH &= ~(1 << PH6);        // rechtsom vanaf voorkant, naar achteren
        _delay_ms(10);
        PORTH |= (1 << PH3);       // linksom vanaf voorkant, naar voren
    }
    else if(stop_x)
    {
        PORTH &= ~(1 << PH3);       // linksom vanaf voorkant, naar achteren
        _delay_ms(10);
        PORTH |= (1 << PH6);       // rechtsom vanaf voorkant, naar voren
    }
    else if(stop_2z)
    {
        PORTG &= ~(1 << PG5);       // rechtsom, dus naar rechts
        _delay_ms(10);
        PORTE |= (1 << PE3);        // linksom, dus naar rechts
    }
    else if(stop_z)
    {
        PORTE &= ~(1 << PE3);       // linksom, dus naar rechts
        _delay_ms(10);
        PORTG |= (1 << PG5);        // rechtsom, dus naar rechts
    }
}

volatile int teller = 0;
volatile int i = 0;
// Interrupt voor noodstop
ISR(TIMER1_OVF_vect)
{
    int noodstop = !(PINK &(1 << NOODSTOP));
    if(noodstop && i == 0)
    {
        i = 1;
        // elektromagneet aan
        PORTE |= (1 << ELEKTROMAGNEET);
        // alle motoren uit
        PORTH &= ~(1 << PH6);
        PORTH &= ~(1 << PH3);
        PORTH &= ~(1 << PH5);
        PORTH &= ~(1 << PH4);
        PORTE &= ~(1 << PE3);
        PORTG &= ~(1 << PG5);
    }
    else if( (PINK &(1 << NOODSTOP)) )
    {
        i = 0;
    }
}

/// Main
int main(void)
{
    initTimer0();
    initTimer1();
    sei();

    // Initialisatie
    //Eindstopjes
    DDRF &= ~(1 << EIND_Z);
    DDRF &= ~(1 << EIND_2Z);
    DDRF &= ~(1 << EIND_X);
    DDRF &= ~(1 << EIND_2X);
    DDRF &= ~(1 << EIND_Y);
    DDRF &= ~(1 << EIND_2Y);

    // IR sensoren
    DDRF &= ~(1 << IRSENSOR1);
    DDRK &= ~(1 << IRSENSOR2);
    DDRK &= ~(1 << IRSENSOR3);
    DDRK &= ~(1 << IRSENSOR4);
    DDRK &= ~(1 << IRSENSOR5);
    DDRK &= ~(1 << IRSENSOR6);
    DDRK &= ~(1 << IRSENSOR7);
    DDRK &= ~(1 << IRSENSOR8);

    // Knoppen
    DDRF &= ~(1 << STARTKNOP);

    // Noodstop
    DDRK &= ~(1 << NOODSTOP);

    // Motoren
    // X-as (langzame motor)
    DDRH |= (1 << PH6);
    DDRH |= (1 << PH3);
    PORTH &= ~(1 << PH6);       // rechtsom vanaf voorkant
    PORTH &= ~(1 << PH3);       // linksom vanaf voorkant
    // Y-as (snelle motor)
    DDRH |= (1 << PH5);
    DDRH |= (1 << PH4);
    PORTH &= ~(1 << PH5);        // Omlaag
    PORTH &= ~(1 << PH4);       // Omhoog
    // Z-as (langzame motor)
    DDRE |= (1 << PE3);
    DDRG |= (1 << PG5);
    PORTE &= ~(1 << PE3);       // linksom vanaf voorkant
    PORTG &= ~(1 << PG5);       // rechtsom vanaf voorkant

    // Elektromagneet
    DDRE |= (1 << ELEKTROMAGNEET);

    int a = 0;
    while(1)
    {
//        int stop_x = !(PINF &(1 << EIND_X));
//        int startknop = !(PINF &(1 << STARTKNOP));
//        if(startknop && a == 0)
//        {
            a = 1;
            /// Start positie

            /// Container oppakken
            //Motor x-as aan
            PORTH |= (1 << PH6);        // rechtsom, dus naar achteren (vanaf de voorkant gezien)

            while(1)
            {
                int irsensor1_x = !(PINF &(1 << IRSENSOR1));
                int irsensor2_x = !(PINK &(1 << IRSENSOR2));
                int irsensor3_x = !(PINK &(1 << IRSENSOR3));
                int irsensor4_x = !(PINK &(1 << IRSENSOR4));
                if(irsensor2_x)
                {
                    // Motor X-as uit
                    PORTH &= ~(1 << PH6);
                    break;
                }
            }

            // Motor z-as aan
            PORTG |= (1 << PG5);        // rechtsom, dus naar rechts (vanaf de voorkant gezien)

            while(1)
            {
                int irsensor1_z = !(PINK &(1 << IRSENSOR5));
                int irsensor2_z = !(PINK &(1 << IRSENSOR6));
                int irsensor3_z = !(PINK &(1 << IRSENSOR7));
                int irsensor4_z = !(PINK &(1 << IRSENSOR8));

                if(irsensor1_z)
                {
                    // Motor z-as uit
                    PORTE &= ~(1 << PE3);
                    PORTG &= ~(1 << PG5);
                    // Motor y-as aan, omlaag
                    PORTH |= (1 << PH5);
                    while(1)
                    {
                        int stop_2y = !(PINF &(1 << EIND_2Y));
                        // Als de end switch wordt ingedrukt, dan motor y-as uit
                        if(stop_2y)
                        {
                            PORTH &= ~(1 << PH5);
                            // Elektromagneet aan
                            PORTE |= (1 << ELEKTROMAGNEET);
                            // Motor y-as aan, omhoog
                            PORTH |= (1 << PH4);
                            while(1)
                            {
                                int stop_y = !(PINF &(1 << EIND_Y));
                                // Als de end switch wordt ingedrukt, dan motor y-as uit
                                if(stop_y)
                                {
                                    PORTH &= ~(1 << PH4);
                                    break;
                                }
                            }
                            break;
                        }
                    }
                    break;
                }
//                break;
            }





            /// Container ergens neerzetten
            // Motor x-as aan
            PORTH |= (1 << PH3);            // linksom, dus naar achteren (vanaf de voorkant gezien)

            while(1)
            {
                int irsensor1_x = !(PINF &(1 << IRSENSOR1));
                int irsensor2_x = !(PINK &(1 << IRSENSOR2));
                int irsensor3_x = !(PINK &(1 << IRSENSOR3));
                int irsensor4_x = !(PINK &(1 << IRSENSOR4));
                if(!irsensor4_x)
                {
                    //Motor X-as uit
                    PORTH &= ~(1 << PH3);
                    break;
                }
            }

            // Motor z-as aan
            PORTE |= (1 << PE3);        // linksom, dus naar links (vanaf de voorkant gezien)

            while(1)
            {
                int irsensor1_z = !(PINK &(1 << IRSENSOR5));
                int irsensor2_z = !(PINK &(1 << IRSENSOR6));
                int irsensor3_z = !(PINK &(1 << IRSENSOR7));
                int irsensor4_z = !(PINK &(1 << IRSENSOR8));
                if(!irsensor4_z)
                {
                    // Motor z-as uit
                    PORTE &= ~(1 << PE3);
                    PORTG &= ~(1 << PG5);
                    // Motor y-as aan, omlaag
                    PORTH |= (1 << PH5);
                    while(1)
                    {
                        int stop_2y = !(PINF &(1 << EIND_2Y));
                        // Als de end switch wordt ingedrukt, dan motor y-as uit
                        if(stop_2y)
                        {
                            PORTH &= ~(1 << PH5);
                            // Elektromagneet aan
                            PORTE &= ~(1 << ELEKTROMAGNEET);
                            // Motor y-as aan, omhoog
                            PORTH |= (1 << PH4);
                            while(1)
                            {
                                int stop_y = !(PINF &(1 << EIND_Y));
                                // Als de end switch wordt ingedrukt, dan motor y-as uit
                                if(stop_y)
                                {
                                    PORTH &= ~(1 << PH4);
                                    break;
                                }
                            }
                            break;
                        }
                    }
                    break;
                }
            }
//        }
//        else if( (PINF &(1 << STARTKNOP)) )
//        {
//            a = 0;
//        }
    }


    return 0;
}
